# "Sonar" flow (spinner w/ B < 1)
# Draws lines revolving around the center
# assuming comms. period of 100 ms

res = 40 # time steps per period
A = 0.4  # sine amplitude
B = .4   # number of "blades"
D = 0.4  # DC offset

c_center = C/2 - .5*(C%2)
r_center = R/2 - .5*(R%2)

c_rad = (c - c_center)**2
r_rad = (r - r_center)**2


rad = math.sqrt(c_rad + r_rad)
max_rad = math.sqrt(c_center**2 + r_center**2)

phase = 2*math.pi*(k/res)

x = c_center - c
y = r_center - r
d = math.sqrt(x**2 + y**2)

sonar = A*math.sin(math.atan2(y, x)*B + phase) + D if d != 0 else D

#################################################
# Uniform flow plus random fluctuations about a
# mean.
#################################################

# Parameters # ..................................
mean = sonar
dev_range_percent = .0
layer_uniform = 0

# ...............................................
range = min(mean, 1 - mean)
dev_max = range*dev_range_percent

tod = mean
if l == layer_uniform:
	return mean
else:
	tod = mean+ l*(2*dev_max*random() - dev_max)


c_center = C/2 - .5*(C%2)
r_center = R/2 - .5*(R%2)
tol = 2

in_center = abs(c - c_center) < tol and abs(r - r_center) < tol

c_rad = (c - c_center)**2
r_rad = (r - r_center)**2

rad = math.sqrt(c_rad + r_rad)
max_rad = math.sqrt(c_center**2 + r_center**2)

phase = 2*math.pi*(rad/max_rad)
A = 0.5
res = 50

donut = A*math.sin(-2*math.pi*((k%res)/res) + phase) + A

return tod*donut


















