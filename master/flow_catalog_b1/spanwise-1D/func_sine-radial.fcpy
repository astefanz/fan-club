# row or column offsetted sine wave
# assuming time step of 100ms

t_0 = 20 # time steps to wait
t_f = 600 # time steps after which to stop
res = 100 # steps in 1 period

# donut ---------------------------------------------

c_center = C/2 - .5*(C%2)
r_center = R/2 - .5*(R%2)
tol = 2

in_center = abs(c - c_center) < tol and abs(r - r_center) < tol

c_rad = (c - c_center)**2
r_rad = (r- r_center)**2

rad = math.sqrt(c_rad + r_rad)
max_rad = math.sqrt(c_center**2 + r_center**2)

phase = 2*math.pi*(rad/max_rad)
A = 0.3 # amplitude
offset = .4 # dc offset

val = A*math.sin(-2*math.pi*((t%res)/res) + phase) + offset

# ---------------------------------------------------

a = .3 # amplitude in DC
b = 2*math.pi/res # angular freq
c_col = 0 # column-wise phase
c_row = 2*math.pi*(r/R) # row-wise phase
c = -2*math.pi*t_0/res + c_col + c_row # phase shift

d = 0.4 # vertical offset in DC

x = t%res # argument

if t < t_0:
	return d
elif t_f is not None and t > t_f:
	return d
else:
	return val


	return a*math.sin(b*x + c) + d

