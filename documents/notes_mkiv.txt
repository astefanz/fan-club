////////////////////////////////////////////////////////////////////////////////
// Project: Fanclub Mark IV Notes // File: notes.txt                          //
//----------------------------------------------------------------------------//
// CALIFORNIA INSTITUTE OF TECHNOLOGY // GRADUATE AEROSPACE LABORATORY //     //
// CENTER FOR AUTONOMOUS SYSTEMS AND TECHNOLOGIES                      //     //
//----------------------------------------------------------------------------//
//      ____      __      __  __      _____      __      __    __    ____     //
//     / __/|   _/ /|    / / / /|  _- __ __\    / /|    / /|  / /|  / _  \    //
//    / /_ |/  / /  /|  /  // /|/ / /|__| _|   / /|    / /|  / /|/ /   --||   //
//   / __/|/ _/    /|/ /   / /|/ / /|    __   / /|    / /|  / /|/ / _  \|/    //
//  / /|_|/ /  /  /|/ / // //|/ / /|__- / /  / /___  / -|_ - /|/ /     /|     //
// /_/|/   /_/ /_/|/ /_/ /_/|/ |\ ___--|_|  /_____/| |-___-_|/  /____-/|/     //
// |_|/    |_|/|_|/  |_|/|_|/   \|___|-    |_____|/   |___|     |____|/       //
//                   _ _    _    ___   _  _      __  __   __                  //
//                  | | |  | |  | T_| | || |    |  ||_ | | _|                 //
//                  | _ |  |T|  |  |  |  _|      ||   \\_//                   //
//                  || || |_ _| |_|_| |_| _|    |__|  |___|                   //
//                                                                            //
//----------------------------------------------------------------------------//
// Alejandro A. Stefan Zavala // <astefanz@berkeley.edu>   //                 //
// Chris J. Dougherty         // <cdougher@caltech.edu>    //                 //
// Marcel Veismann            // <mveisman@caltech.edu>    //                 //
////////////////////////////////////////////////////////////////////////////////

/* ABOUT ***********************************************************************
 * Development notes on FCMkIV. "Forgotten mistakes are doomed to be repeated."
 ******************************************************************************/

## ON TESTING AND DEBUGGING ####################################################

- Want an automated build and test rig.
- Want debugging tools for:
    - Line execution checking

> Reading command line arguments:
https://www.tutorialspoint.com/python3/python_command_line_arguments.htm

## ON COMPILING PYTHON #########################################################

- See PyInstaller:
https://pyinstaller.readthedocs.io/en/stable/

** NOTE: See platform-specific notes at:
https://pyinstaller.readthedocs.io/en/stable/usage.html#platform-specific-notes

- For PyInstaller usage on Windows:
python3 -m PyInstaller --clean --onefile --noconsole --name=FanClub main.py
PLUS: --icon='path\to\icon.ico'

## ON PYTHON PACKAGES ##########################################################

- See official documentation:
https://docs.python.org/3/tutorial/modules.html

## ON PROFILE DESIGN ###########################################################

- Using a dictionary to store profile data:
https://stackoverflow.com/questions/1336791/
    dictionary-vs-object-which-is-more-efficient-and-why

## REDIRECTING TERMINAL OUTPUT TO GUI ##########################################
https://stackoverflow.com/questions/12351786/
    how-to-redirect-print-statements-to-tkinter-text-widget

## ON MULTIPROCESSING ##########################################################

- If you get the following "Fatal" error:

Fatal Python error: could not acquire lock for
    <_io.BufferedWriter name='<stdout>'> at interpreter shutdown,
    possibly due to daemon threads

See:
    https://stackoverflow.com/questions/45267439/
        fatal-python-error-and-bufferedwriter
(Should not be a problem once interface is built... still may want to build a
print queue)


- Pipes vs Queues:
    Fundamentally the same, except...
    - Pipes can only have "two endpoints."
    - Queues can have multiple producers and consumers.
    That is,
    - "If you need more than two points to communicate, use a Queue."
    - "If you need absolute performance, use a Pipe... Queue is built on top
    of Pipe."

    See:
    https://stackoverflow.com/questions/8463008/multiprocessing-pipe-vs-queue

## ON STREAMLINED TKINTER GUI ##################################################

- To use PAGE (a drag and drop Tkinter GUI builder) you need to install Tcl and
'wish' (in package tk):

sudo apt install tcl
sudo apt install tk

- For PAGE, see:
http://page.sourceforge.net/

- Download the archive and expand it to Home. You may hide the page directory.
Run the 'configure' script in it (./configure)

- Add the 'page' binary to your PATH so you can launch PAGE by typing it into
the terminal emulator.

## ON TKINTER TRANSPARENCY #####################################################

- OS-dependent solution. See:
https://stackoverflow.com/questions/19080499/
    transparent-background-in-a-tkinter-window

## ON INCLUDING IMAGES #########################################################

To include images and other data files into the compiled binary:

- Add a "spec" file to PyInstaller so you can specify which resources to add:
https://pythonhosted.org/PyInstaller/spec-files.html

- Modify your scripts so they figure out the correct path to the files, both
when embedded into a standalone and when executed as usual:
https://stackoverflow.com/questions/7674790/
    bundling-data-files-with-pyinstaller-onefile

HOWEVER, embedding images and later retrieving them with tkinter.PhotoImage
does not work. This can be fixed by installing Pillow (pip install PIL) and
using PIL.ImageTk.PhotoImage instead, but this PhotoImage does not support the
zoom and subsample methods, which FCMkIV uses...

Instead, use the base64 package to encode the image and pass the raw data to
tkinter.PhotoImage as 'data' instead of 'file.' See:
https://stackoverflow.com/questions/42834675/base64-string-to-image-in-tkinter

## ON MULTIPLATFORM ############################################################

- For Windows DPI resolution fix, See:
https://stackoverflow.com/questions/41315873/
attempting-to-resolve-blurred-tkinter-text-scaling-on-windows-10-high-dpi-disp

Note that only a few lines of code are required:
from ctypes import windll
windll.shcore.SetProcessDpiAwareness(1)

